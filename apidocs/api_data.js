define({ "api": [  {    "type": "post",    "url": "/api/auth/login",    "title": "Logs in a registered user",    "version": "1.0.0",    "name": "PostLogin",    "group": "Auth",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Log an user in, receive token on successful login</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The User's username</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The User's password</p>"          }        ]      },      "examples": [        {          "title": "Sample-Request:",          "content": "{\n    \"username\": \"johndoe\",\n    \"password\": \"123456\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "json",            "optional": false,            "field": "message",            "description": "<p>Welcome Message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"message\": \"Welcome back johndoe!\",\n    \"token\": \"Generated Token\"\n}",          "type": "json"        }      ]    },    "filename": "docs/auth.js",    "groupTitle": "Auth",    "error": {      "fields": {        "400": [          {            "group": "400",            "optional": false,            "field": "ValidationErrors",            "description": "<p>The Information Failed Validation</p>"          }        ],        "401": [          {            "group": "401",            "optional": false,            "field": "InvalidCredentials",            "description": "<p>Password is Incorrect</p>"          }        ],        "404": [          {            "group": "404",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>username</code> was not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n    \"username\": \"Required\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "{\n    \"code\": 404,\n    \"error\": \"User Not Found\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "{\n    \"code\": 401,\n    \"error\": \"Invalid Credentials\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/api/auth/register",    "title": "Registers a New User",    "version": "1.0.0",    "name": "PostRegister",    "group": "Auth",    "permission": [      {        "name": "none"      }    ],    "description": "<p>Registers a New User to the Database</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>The User's Email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The User's Username</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The User's Password</p>"          }        ]      },      "examples": [        {          "title": "Sample-Request:",          "content": "{\n    \"email\": \"john@doe.com\",\n    \"username\": \"johndoe\",\n    \"password\": \"123456\"\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "201": [          {            "group": "201",            "type": "json",            "optional": false,            "field": "message",            "description": "<p>Welcome Message</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"message\": \"Welcome to Dad Jokes johndoe\"\n}",          "type": "json"        }      ]    },    "filename": "docs/auth.js",    "groupTitle": "Auth",    "error": {      "fields": {        "400": [          {            "group": "400",            "optional": false,            "field": "ValidationErrors",            "description": "<p>The Information Failed Validation</p>"          },          {            "group": "400",            "optional": false,            "field": "UserNameAlreadyTaken",            "description": "<p>Username is already in the database.</p>"          },          {            "group": "400",            "optional": false,            "field": "EmailAlreadyTaken",            "description": "<p>The Email is already in the system.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "{\n    \"username\": \"Required\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "{\n    \"code\": 400,\n    \"error\": \"Username is already taken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "{\n    \"code\": 400,\n    \"error\": \"Email is already taken\"\n}",          "type": "json"        }      ]    }  }] });
